@Library(['jenkinslib']) _

pipeline {
    agent any
    environment {
        chat_id = '6179867909'
    }

    stages {
        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Send Enhanced Message') {
            steps {
                script {
                    // Define the template message with placeholders
                    def messageTemplate = '''
                    ðŸŒŸ *Jenkins Notification* ðŸŒŸ

                    *Project:* ${projectName}
                    *Build Status:* ${buildStatus}
                    *Build Number:* ${buildNumber}
                    *Build URL:* [Open Build](${buildUrl})

                    ðŸš€ *Powered by Jenkins* ðŸš€
                    '''
                    
                    // Replace placeholders with actual values
                    def message = messageTemplate.replace('${projectName}', env.JOB_NAME)
                                                .replace('${buildStatus}', currentBuild.currentResult)
                                                .replace('${buildNumber}', currentBuild.number.toString())
                                                .replace('${buildUrl}', env.BUILD_URL)
                    
                    // Define the URL for the API request with BotToken from Jenkins environment
                    def url = "https://api.telegram.org/bot${env.BotToken}/sendMessage"
                    
                    // Send the message using curl with Markdown parse mode
                    sh "curl -s -X POST '${url}' -d chat_id=${chat_id} -d text='${message}' -d parse_mode=Markdown"
                }
            }
        }
    }
}
